--! This is a sub_queirey
-- SELECT *
-- FROM(
--         SELECT *
--         FROM job_postings_fact
--         WHERE EXTRACT(
--                 MONTH
--                 FROM job_posted_date
--             ) = 1
--     )
-- ORDER BY job_posted_date::DATE
--! CTE's
-- WITH jan_jobs AS (
--     SELECT *
--     FROM job_postings_fact
--     WHERE EXTRACT(MONTH FROM job_posted_date) = 1
-- )
-- SELECT * FROM jan_jobs
-- SELECT
--     name
-- FROM
--     company_dim
-- JOIN job_postings_fact ON company_dim.company_id = job_postings_fact.company_id
--! jub_q 
-- SELECT
--     name
-- FROM
--     company_dim
-- WHERE company_id IN (
--     SELECT
--         company_id
--     FROM
--         job_postings_fact
--     WHERE
--         job_no_degree_mention = TRUE
-- )
--!CTE's
-- WITH heigh_postings AS (
--     SELECT
--         company_id,
--         COUNT(DISTINCT job_id) as job_id
--     FROM
--         job_postings_fact
--     GROUP BY company_id
-- )
-- SELECT
--     name,
--     job_id
-- FROM
--     company_dim
-- LEFT JOIN heigh_postings ON heigh_postings.company_id = company_dim.company_id
-- ORDER BY job_id DESC
--! Q!_mine
-- WITH skill_count AS (SELECT
--     skill_id,
--     COUNT(job_id) AS count
-- FROM skills_job_dim
-- GROUP BY skill_id)
-- SELECT
--     skills,
--     skill_count.count
-- FROM
--     skills_dim
-- LEFT JOIN skill_count ON skills_dim.skill_id = skill_count.skill_id
--! Q1_sub
-- SELECT
--     skills_dim.skill_id,
--     skills_dim.skills,
--     skill_count.count
-- FROM(
--     SELECT
--         skill_id,
--         COUNT(job_id) AS count
--     FROM skills_job_dim
--     GROUP BY skill_id
--     ) AS skill_count
-- LEFT JOIN skills_dim ON skill_count.skill_id = skills_dim.skill_id
-- ORDER BY skill_count.count DESC
--!Q2_subs
-- SELECT
--     *,
--     CASE
--         WHEN post_per_comp.job_count < 10 THEN 'small'
--         WHEN post_per_comp.job_count < 50 THEN 'mid'
--         ELSE 'larg'
--     END AS comp_category
-- FROM
--     (SELECT
--         company_id,
--         COUNT(job_id) AS job_count
--     FROM
--         job_postings_fact
--     GROUP BY company_id) AS post_per_comp
-- ORDER BY post_per_comp.job_count DESC
--! kelly's sub q:
--? The nesting fallow's typical class higherarchy
-- TODO write a blogpost
-- SELECT skill_count_per_job.skill_id,
--     skills_dim.skills,
--     skill_count_per_job.count,
--     skill_count_per_job.job_location -- owner(skill_count_per_job)
-- FROM(
--         SELECT remote_jobs.skill_id,
--             COUNT(remote_jobs.job_id),
--             remote_jobs.job_location -- owner(remote_jobs)
--         FROM (
--                 SELECT job_postings_fact.job_id,
--                     skills_job_dim.skill_id,
--                     job_postings_fact.job_location -- owner(job_posting)
--                 FROM job_postings_fact
--                     JOIN skills_job_dim ON job_postings_fact.job_id = skills_job_dim.job_id
--                 WHERE job_work_from_home = TRUE
--                     AND job_title_short = 'Data Analyst'
--                     AND job_country = 'United Arab Emirates'
--             ) as remote_jobs
--         GROUP BY skill_id,
--             job_location
--     ) AS skill_count_per_job
--     JOIN skills_dim ON skill_count_per_job.skill_id = skills_dim.skill_id
-- ORDER BY skill_count_per_job.count DESC LIMIT 5;
-- SELECT
--     *
-- FROM
--     job_postings_fact
-- WHERE job_country ~~ '%United Arab Emirates%'
--* MINE
-- TODO do one using CTE's
-- SELECT skill_count_per_job.skill_id,
--     skills_dim.skills,
--     skill_count_per_job.count
--     -- skill_count_per_job.job_location -- owner(skill_count_per_job)
-- FROM(
--     SELECT remote_jobs.skill_id,
--         COUNT(remote_jobs.job_id)
--         -- remote_jobs.job_location -- owner(remote_jobs)
--     FROM (
--         SELECT
--             job_postings_fact.job_id,
--             skills_job_dim.skill_id
--             -- job_postings_fact.job_location -- owner(job_posting)
--         FROM job_postings_fact
--             JOIN skills_job_dim ON job_postings_fact.job_id = skills_job_dim.job_id
--         WHERE
--             job_title_short = 'Data Analyst'
--             AND
--             job_country = 'United Arab Emirates'
--         ) as remote_jobs
--     GROUP BY skill_id
--         -- job_location
--     ) AS skill_count_per_job
-- JOIN skills_dim ON skill_count_per_job.skill_id = skills_dim.skill_id
-- ORDER BY skill_count_per_job.count DESC LIMIT 10;
--! The CTE's one: